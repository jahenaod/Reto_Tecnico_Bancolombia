# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)

variables:
  - name: 'Artifactory.Repository'
  - name: 'Artifact.Name'

resources:
 - repo: self
   clean: true

trigger:
  branches:
    include:
      - master
      - trunk
      - main
      - feature/*

stages:
- stage: CI
  jobs:
  - job: build
    displayName: 'Build'
    pool:
      name: Default
    steps:
    - task: SonarQubePrepare@5
      displayName: 'Prepare analysis on SonarQube'
      inputs:
        SonarQube: 'sonar-connection1'
        scannerMode: 'Other'
        extraProperties: |
          sonar.projectKey=$(Build.Repository.Name)
          sonar.projectName=$(Build.Repository.Name)
          sonar.projectVersion=$(Build.BuildNumber)
    - task: Gradle@3
      displayName: 'Build and Test'
      inputs:
        workingDirectory: .
        gradleWrapperFile: 'gradlew'
        tasks: 'clean build jacocoMergedReport'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        sqGradlePluginVersionChoice: 'build'
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/jacocoMergedReport.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/html'
    - task: SonarQubeAnalyze@5
      displayName: 'Run code analysis'
    - task: Sonar-buildbreaker@8
      displayName: 'Quality Gate'
      inputs:
        SonarQube: 'sonar-connection1'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      condition: in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/trunk', 'refs/heads/master')
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)'
        ArtifactName: 'Web_server_Artifact'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'],'refs/heads/main'))
        




